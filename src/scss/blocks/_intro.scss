.intro {
  // Default is a single column layout where the header overlaps the media
  display: grid;
  grid-template-rows: auto 3fr minmax(0, 1fr) auto;
  grid-gap: get-size('500');

  // Force items to span 1 column
  > * {
    grid-column: 1;
  }

  &__header {
    padding: get-size('300') get-size('500');
    background: rgba(get-color('quaternary'), 0.95);
    z-index: 1;
    grid-row: 3;
    margin: 0 get-size('500'); // Adds a horizontal gutter

    // Prevents it from stretching to fill the space
    align-self: center;
  }

  &__heading {
    em {
      font-style: normal;
      display: block;

      // The weight change creates a weird indent, so this
      // optical adjustment fixes it
      transform: translateX(-3px);
    }
  }

  &__media {
    grid-row: 1/4;
    position: relative;

    img {
      width: 100%;
      // height: 100%;
      object-fit: contain;
    }
  }

  &__content {
    grid-row: 4;

    h3 {
      margin-bottom: get-size('400');
      // max-width: 30ch;
    }

    ul {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(15ch, 1fr));
      grid-gap: get-size('400');

      li {
        display: grid;
        grid-template-columns: 0 1fr;
        grid-gap: 1.75em;
        align-items: start;
        //font-size: 1.5rem;
        line-height: 1.25;
        text-transform: uppercase;

        &::before {
          content: attr(data-icon);
          // Make slightly larger than the li font-size
          // but smaller than the li grid-gap
          font-size: 1em;
        }
      }
    }
  }

  // Switch to an inline layout with some vert space
  // above the header and content
  @include media-query('md') {
    grid-template-rows: get-size('500') auto auto auto;
    grid-template-columns: 0.8fr 1.2fr;

    &__header {
      padding: get-size('500');
      margin: 0;
      grid-row: 2;
      grid-column: 1/3;
      justify-self: start;
      align-self: end;
    }

    &__media {
      grid-column: 3/2;
      grid-row: 1/5;
      //min-width: 25rem;

      img {
        width: 100%;
        height: 100%;
        object-fit: contain;
      }
    }

    &__content {
      grid-row: 3/5;
      grid-column: 1;
    }
  }

  // Flip the ratio for larger breakpoints
  @include media-query('lg') {
    grid-template-columns: 1fr 1fr;

    // Because it's so large, it make sense to limit the image height too
    &__media {
      height: 45rem;
    }
  }
}
